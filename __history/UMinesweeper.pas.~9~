unit UMinesweeper;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.StdCtrls,
  System.ImageList, Vcl.ImgList;

type
  TMinesweeper = class(TForm)
    LabelMinesLeft: TLabel;
    LabelMinesLeftValue: TLabel;
    LabelSquaresLeft: TLabel;
    LabelSquaresLeftValue: TLabel;
    StringGrid: TStringGrid;
    ButtonFlag: TButton;
    ButtonReveal: TButton;
    ImageList: TImageList;
    procedure FormCreate(Sender: TObject);
    procedure ButtonFlagClick(Sender: TObject);
    procedure ButtonRevealClick(Sender: TObject);
    procedure CellSelect(Sender: TObject; ACol, ARow: Integer;
      var CanSelect: Boolean);
    procedure OnDrawCell(Sender: TObject; ACol, ARow: Integer; Rect: TRect;
      State: TGridDrawState);
    { procedure ActivateMouse(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y, HitTest: Integer;
      var MouseActivate: TMouseActivate); }
  private
    { Private declarations }
  public
    { Public declarations }
    MinesLeft, SquaresLeft, Row, Column: Integer;
    FlagButton: Boolean;
    MinesValues: array [0 .. 29, 0 .. 29] of char;
    procedure CellValueAssignCheck;
  end;

var
  Minesweeper: TMinesweeper;

implementation

{$R *.dfm}

procedure TMinesweeper.ButtonFlagClick(Sender: TObject);
begin
  FlagButton := true;
  ButtonFlag.Enabled := false;
  ButtonReveal.Enabled := true;
end;

procedure TMinesweeper.ButtonRevealClick(Sender: TObject);
begin
  FlagButton := false;
  ButtonFlag.Enabled := true;
  ButtonReveal.Enabled := false;
end;

procedure CellValueAssignCheck(ColumnCheck, RowCheck: Integer);



procedure TMinesweeper.CellSelect(Sender: TObject; ACol, ARow: Integer;
  var CanSelect: Boolean);
var
  CellValue: string;
  RowCheck, ColumnCheck: Integer;
begin
  if FlagButton = false then
  begin
    SquaresLeft := SquaresLeft - 1;
    LabelSquaresLeftValue.Caption := inttostr(SquaresLeft);
    Row := ARow;
    Column := ACol;
    if MinesValues[Column, Row] = 'o' then
      CellValue := '';
    if MinesValues[Column, Row] = 'a' then
      CellValue := '1';
    if MinesValues[Column, Row] = 'b' then
      CellValue := '2';
    if MinesValues[Column, Row] = 'c' then
      CellValue := '3';
    if MinesValues[Column, Row] = 'd' then
      CellValue := '4';
    if MinesValues[Column, Row] = 'e' then
      CellValue := '5';
    if MinesValues[Column, Row] = 'f' then
      CellValue := '6';
    if MinesValues[Column, Row] = 'g' then
      CellValue := '7';
    if MinesValues[Column, Row] = 'h' then
      CellValue := '8';
    if MinesValues[Column, Row] = 'm' then
      CellValue := 'M';
    StringGrid.Cells[Column, Row] := CellValue;
    if CellValue = '' then
    begin
      for RowCheck := 0 to 29 do
      begin
        for ColumnCheck := 0 to 29 do
        begin
          if (ColumnCheck <> 0) and (RowCheck <> 0) then
          begin
            if StringGrid.Cells[ColumnCheck - 1, RowCheck - 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck - 1, RowCheck - 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck - 1, RowCheck] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck - 1, RowCheck] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck - 1, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck - 1, RowCheck + 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck, RowCheck - 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck, RowCheck - 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck, RowCheck + 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck - 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck - 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck + 1] := CellValue;
            end;
          end;
          if (ColumnCheck = 0) and (RowCheck <> 0) then
          begin
            if StringGrid.Cells[ColumnCheck, RowCheck - 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck, RowCheck - 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck, RowCheck + 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck - 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck - 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck + 1] := CellValue;
            end;
          end;
          if (ColumnCheck <> 0) and (RowCheck = 0) then
          begin
            if StringGrid.Cells[ColumnCheck - 1, RowCheck] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck - 1, RowCheck] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck - 1, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck - 1, RowCheck + 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck, RowCheck + 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck + 1] := CellValue;
            end;
          end;
          if (ColumnCheck = 0) and (RowCheck = 0) then
          begin
            if StringGrid.Cells[ColumnCheck, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck, RowCheck + 1] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck] := CellValue;
            end;
            if StringGrid.Cells[ColumnCheck + 1, RowCheck + 1] = '#' then
            begin
              if MinesValues[ColumnCheck, RowCheck] = 'o' then
                CellValue := '';
              if MinesValues[ColumnCheck, RowCheck] = 'a' then
                CellValue := '1';
              if MinesValues[ColumnCheck, RowCheck] = 'b' then
                CellValue := '2';
              if MinesValues[ColumnCheck, RowCheck] = 'c' then
                CellValue := '3';
              if MinesValues[ColumnCheck, RowCheck] = 'd' then
                CellValue := '4';
              if MinesValues[ColumnCheck, RowCheck] = 'e' then
                CellValue := '5';
              if MinesValues[ColumnCheck, RowCheck] = 'f' then
                CellValue := '6';
              if MinesValues[ColumnCheck, RowCheck] = 'g' then
                CellValue := '7';
              if MinesValues[ColumnCheck, RowCheck] = 'h' then
                CellValue := '8';
              StringGrid.Cells[ColumnCheck + 1, RowCheck + 1] := CellValue;
            end;
          end;
        end;
      end;
    end;

  end;
  if FlagButton = true then
    StringGrid.Cells[Column, Row] := 'F';
end;

procedure TMinesweeper.FormCreate(Sender: TObject);
var
  Row, Column, MinesLeft, I, CellTotal: Integer;
  ArrayValue: char;
begin
  MinesLeft := 100;
  LabelMinesLeftValue.Caption := inttostr(MinesLeft);
  SquaresLeft := 900;
  LabelSquaresLeftValue.Caption := inttostr(SquaresLeft);
  FlagButton := false;
  // MINE GENERATION
  for I := 1 to 900 do
  begin
    if MinesLeft = 0 then
      MinesLeft := 0;
    if MinesLeft > 0 then
    begin
      Row := random(30);
      Column := random(30);
      if StringGrid.Cells[Column, Row] <> 'm' then
      begin
        MinesLeft := MinesLeft - 1;
        StringGrid.Cells[Column, Row] := 'm';
      end;
    end;
  end;
  // NUMBERS ASSIGNMENT
  for Column := 0 to 29 do
  begin
    for Row := 0 to 29 do
    begin
      CellTotal := 0;
      if (Column <> 0) and (Row <> 0) then
      begin
        if StringGrid.Cells[Column - 1, Row - 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column - 1, Row] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column - 1, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column, Row - 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row - 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
      end;
      if (Column = 0) and (Row <> 0) then
      begin
        if StringGrid.Cells[Column, Row - 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row - 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
      end;
      if (Column <> 0) and (Row = 0) then
      begin
        if StringGrid.Cells[Column - 1, Row] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column - 1, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
      end;
      if (Column = 0) and (Row = 0) then
      begin
        if StringGrid.Cells[Column, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row] = 'm' then
          CellTotal := CellTotal + 1;
        if StringGrid.Cells[Column + 1, Row + 1] = 'm' then
          CellTotal := CellTotal + 1;
      end;
      if CellTotal <> 0 then
      begin
        if StringGrid.Cells[Column, Row] <> 'm' then
          StringGrid.Cells[Column, Row] := inttostr(CellTotal);
      end;
    end;
  end;

  // CREATION OF ARRAY
  for Row := 0 to 29 do
  begin
    for Column := 0 to 29 do
    begin
      if StringGrid.Cells[Column, Row] = '' then
        ArrayValue := 'o';
      if StringGrid.Cells[Column, Row] = '1' then
        ArrayValue := 'a';
      if StringGrid.Cells[Column, Row] = '2' then
        ArrayValue := 'b';
      if StringGrid.Cells[Column, Row] = '3' then
        ArrayValue := 'c';
      if StringGrid.Cells[Column, Row] = '4' then
        ArrayValue := 'd';
      if StringGrid.Cells[Column, Row] = '5' then
        ArrayValue := 'e';
      if StringGrid.Cells[Column, Row] = '6' then
        ArrayValue := 'f';
      if StringGrid.Cells[Column, Row] = '7' then
        ArrayValue := 'g';
      if StringGrid.Cells[Column, Row] = '8' then
        ArrayValue := 'h';
      if StringGrid.Cells[Column, Row] = 'm' then
        ArrayValue := 'm';
      MinesValues[Column, Row] := ArrayValue;
    end;
  end;

  // 'HIDING' VALUES FROM CELLS
  for Row := 0 to 29 do
  begin
    for Column := 0 to 29 do
    begin
      StringGrid.Cells[Column, Row] := '#';
    end;
  end;

end;

{ procedure TMinesweeper.MouseActivate(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y, HitTest: Integer;
  var MouseActivate: TMouseActivate);
  begin

  end; }

procedure TMinesweeper.OnDrawCell(Sender: TObject; ACol, ARow: Integer;
  Rect: TRect; State: TGridDrawState);
begin
  StringGrid.Canvas.Brush.Color := ClGray;
  StringGrid.Canvas.FillRect(Rect);
  if (ARow = Row) and (ACol = Column) then
  begin
    StringGrid.Canvas.Brush.Color := ClSilver;
    StringGrid.Canvas.FillRect(Rect);
  end;
end;

end.
